<bean id="escidoc-core.txProxyTemplate"
	class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
	abstract="true" lazy-init="true">
	<property name="transactionManager">
		<ref bean="escidoc-core.txManager" />
	</property>
	<property name="transactionAttributes">
		<props>
			<prop key="*">PROPAGATION_REQUIRED,+EscidocException</prop>
		</props>
	</property>
</bean>

<tx:advice id="escidoc-core.txAdvice" transaction-manager="escidoc-core.txManager">
  <tx:attributes>
    <tx:method name="*" propagation="REQUIRED" rollback-for="de.escidoc.core.common.exceptions.system.SystemException, java.lang.RuntimeException"/>
  </tx:attributes>
</tx:advice>

<bean id="escidoc-core.txManager"
	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource">
		<ref bean="escidoc-core.DataSource" />
	</property>
</bean>

<bean id="jdbcTemplate"
	class="org.springframework.jdbc.core.JdbcTemplate">
	<property name="dataSource">
		<ref bean="escidoc-core.DataSource" />
	</property>
</bean>

<bean
	class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<property name="locations">
		<list>
            <value>file:${catalina.home}/conf/escidoc-core.properties</value>
            <value>file:${catalina.home}/conf/escidoc-core.custom.properties</value>
		</list>
	</property>
	<property name="ignoreResourceNotFound" value="true" />
</bean>

<bean id="escidoc-core.DataSource"
    class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" lazy-init="true">
    <!-- see escidoc-core.DataSource for property descriptions -->
    <property name="driverClass" value="${escidoc-core.datasource.driverClassName}"/>
    <property name="jdbcUrl" value="${escidoc-core.datasource.url}"/>
    <property name="user" value="${escidoc-core.datasource.username}"/>
    <property name="password" value="${escidoc-core.datasource.password}"/>
    <property name="acquireIncrement" value="${escidoc-core.datasource.acquireIncrement}"/>
    <property name="acquireRetryAttempts" value="${escidoc-core.datasource.acquireRetryAttempts}"/>
    <property name="acquireRetryDelay" value="${escidoc-core.datasource.acquireRetryDelay}"/>
    <property name="autoCommitOnClose" value="${escidoc-core.datasource.autoCommitOnClose}"/>
    <property name="breakAfterAcquireFailure" value="${escidoc-core.datasource.breakAfterAcquireFailure}"/>
    <property name="checkoutTimeout" value="${escidoc-core.datasource.checkoutTimeout}"/>
    <property name="idleConnectionTestPeriod" value="${escidoc-core.datasource.idleConnectionTestPeriod}"/>
    <property name="initialPoolSize" value="${escidoc-core.datasource.initialPoolSize}"/>
    <property name="maxConnectionAge" value="${escidoc-core.datasource.maxConnectionAge}"/>
    <property name="maxIdleTime" value="${escidoc-core.datasource.maxIdleTime}"/>
    <property name="maxIdleTimeExcessConnections" value="${escidoc-core.datasource.maxIdleTimeExcessConnections}"/>
    <property name="maxPoolSize" value="${escidoc-core.datasource.maxPoolSize}"/>
    <property name="maxStatements" value="${escidoc-core.datasource.maxStatements}"/>
    <property name="maxStatementsPerConnection" value="${escidoc-core.datasource.maxStatementsPerConnection}"/>
    <property name="minPoolSize" value="${escidoc-core.datasource.minPoolSize}"/>
    <property name="numHelperThreads" value="${escidoc-core.datasource.numHelperThreads}"/>
    <property name="preferredTestQuery" value="${escidoc-core.datasource.preferredTestQuery}"/>
    <property name="propertyCycle" value="${escidoc-core.datasource.propertyCycle}"/>
    <property name="testConnectionOnCheckin" value="${escidoc-core.datasource.testConnectionOnCheckin}"/>
    <property name="testConnectionOnCheckout" value="${escidoc-core.datasource.testConnectionOnCheckout}"/>
    <property name="unreturnedConnectionTimeout" value="${escidoc-core.datasource.unreturnedConnectionTimeout}"/>
    <property name="debugUnreturnedConnectionStackTraces" value="true"/>
</bean>

<bean id="fedora.triplestore.DataSource"
    class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" lazy-init="true">
    <!-- see escidoc-core.DataSource for property descriptions -->
    <property name="driverClass" value="${triplestore.datasource.driverClassName}"/>
    <property name="jdbcUrl" value="${triplestore.datasource.url}"/>
    <property name="user" value="${triplestore.datasource.username}"/>
    <property name="password" value="${triplestore.datasource.password}"/>
    <property name="acquireIncrement" value="${triplestore.datasource.acquireIncrement}"/>
    <property name="acquireRetryAttempts" value="${triplestore.datasource.acquireRetryAttempts}"/>
    <property name="acquireRetryDelay" value="${triplestore.datasource.acquireRetryDelay}"/>
    <property name="autoCommitOnClose" value="${triplestore.datasource.autoCommitOnClose}"/>
    <property name="breakAfterAcquireFailure" value="${triplestore.datasource.breakAfterAcquireFailure}"/>
    <property name="checkoutTimeout" value="${triplestore.datasource.checkoutTimeout}"/>
    <property name="idleConnectionTestPeriod" value="${triplestore.datasource.idleConnectionTestPeriod}"/>
    <property name="initialPoolSize" value="${triplestore.datasource.initialPoolSize}"/>
    <property name="maxConnectionAge" value="${triplestore.datasource.maxConnectionAge}"/>
    <property name="maxIdleTime" value="${triplestore.datasource.maxIdleTime}"/>
    <property name="maxIdleTimeExcessConnections" value="${triplestore.datasource.maxIdleTimeExcessConnections}"/>
    <property name="maxPoolSize" value="${triplestore.datasource.maxPoolSize}"/>
    <property name="maxStatements" value="${triplestore.datasource.maxStatements}"/>
    <property name="maxStatementsPerConnection" value="${triplestore.datasource.maxStatementsPerConnection}"/>
    <property name="minPoolSize" value="${triplestore.datasource.minPoolSize}"/>
    <property name="numHelperThreads" value="${triplestore.datasource.numHelperThreads}"/>
    <property name="preferredTestQuery" value="${triplestore.datasource.preferredTestQuery}"/>
    <property name="propertyCycle" value="${triplestore.datasource.propertyCycle}"/>
    <property name="testConnectionOnCheckin" value="${triplestore.datasource.testConnectionOnCheckin}"/>
    <property name="testConnectionOnCheckout" value="${triplestore.datasource.testConnectionOnCheckout}"/>
    <property name="unreturnedConnectionTimeout" value="${triplestore.datasource.unreturnedConnectionTimeout}"/>
    <property name="debugUnreturnedConnectionStackTraces" value="true"/>
</bean>

<bean id="common.CommonMethodMapper"
	class="de.escidoc.core.common.servlet.invocation.MethodMapper">
	<property name="descriptorFilenames">
		<list>
			<value>/META-INF/servlet/container.xml</value>
			<value>/META-INF/servlet/content-relation.xml</value>
			<value>/META-INF/servlet/context.xml</value>
			<value>/META-INF/servlet/item.xml</value>
			<value>/META-INF/servlet/ingest.xml</value>
			<value>/META-INF/servlet/content-model.xml</value>
			<value>/META-INF/servlet/organizational-unit.xml</value>
			<value>/META-INF/servlet/user-account.xml</value>
			<value>/META-INF/servlet/admin.xml</value>
			<value>/META-INF/servlet/stagingfile.xml</value>
		</list>
	</property>
</bean>

<jee:jndi-lookup id="common.local.QueueConnectionFactory" jndi-name="ConnectionFactory"/>

<!-- 
<bean id="om.remote.cacheMessageQueue"
	class="de.escidoc.core.common.util.service.RemoteJndiLocator"
	lazy-init="true">
	<property name="jndiName">
		<value>queue/ResourceCacheMessageQueue</value>
	</property>
	<property name="packageName">
		<value>de.escidoc.om.service</value>
	</property>
</bean>
 -->
 
<bean id="sb.remote.QueueConnectionFactory"
	class="de.escidoc.core.common.util.service.RemoteJndiLocator"
	lazy-init="true">
	<property name="jndiName">
		<value>ConnectionFactory</value>
	</property>
	<property name="packageName">
		<value>de.escidoc.sb.service</value>
	</property>
</bean>

<bean id="sm.remote.QueueConnectionFactory"
	class="de.escidoc.core.common.util.service.RemoteJndiLocator"
	lazy-init="true">
	<property name="jndiName">
		<value>ConnectionFactory</value>
	</property>
	<property name="packageName">
		<value>de.escidoc.core.sm.service</value>
	</property>
</bean>

<bean id="adm.remote.purgeMessageQueue"
        class="de.escidoc.core.common.util.service.RemoteJndiLocator"
        lazy-init="true">
        <property name="jndiName">
                <value>queue/PurgeMessageQueue</value>
        </property>
        <property name="packageName">
                <value>de.escidoc.adm.service</value>
        </property>
</bean>

<bean id="adm.remote.recacherMessageQueue"
	class="de.escidoc.core.common.util.service.RemoteJndiLocator"
	lazy-init="true">
	<property name="jndiName">
		<value>queue/RecacherMessageQueue</value>
	</property>
	<property name="packageName">
		<value>de.escidoc.adm.service</value>
	</property>
</bean>

<bean id="sb.remote.indexerMessageQueue"
        class="de.escidoc.core.common.util.service.RemoteJndiLocator"
        lazy-init="true">
        <property name="jndiName">
                <value>queue/IndexerMessageQueue</value>
        </property>
        <property name="packageName">
                <value>de.escidoc.sb.service</value>
        </property>
</bean>

<bean id="sm.remote.statisticMessageQueue"
	class="de.escidoc.core.common.util.service.RemoteJndiLocator"
	lazy-init="true">
	<property name="jndiName">
		<value>queue/StatisticMessageQueue</value>
	</property>
	<property name="packageName">
		<value>de.escidoc.core.sm.service</value>
	</property>
</bean>



<!-- security -->
<bean id="common.SessionFactory"
	class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
	<property name="dataSource">
		<ref bean="escidoc-core.DataSource" />
	</property>
	<property name="hibernateProperties">
		<props>
			<prop key="hibernate.transaction.factory_class">
				org.hibernate.transaction.JTATransactionFactory
			</prop>
			<prop key="hibernate.transaction.manager_lookup_class">
				${escidoc-core.hibernate.transaction.manager_lookup_class}
			</prop>
			<prop key="hibernate.dialect">
			    ${escidoc-core.hibernate.dialect}
			</prop>
			<!-- ehCache default provider cannot handle two session factories -->
			<prop key="hibernate.cache.provider_class">
				org.hibernate.cache.HashtableCacheProvider
			</prop>
			<prop key="hibernate.show_sql">false</prop>
			<prop key="jta.UserTransaction">${escidoc-core.jta.UserTransaction}</prop>
			<prop key="hibernate.connection.release_mode">auto</prop>
		</props>
	</property>
	<property name="mappingResources">
		<list>
			<value>
				de/escidoc/core/common/util/security/persistence/InvocationMapping.hbm.xml
			</value>
			<value>
				de/escidoc/core/common/util/security/persistence/MethodMapping.hbm.xml
			</value>
		</list>
	</property>
</bean>

<!-- 
        JMX 
 -->
 
<!-- exposing spring beans as MBeans that are annotated 
      (using appropriate JAVA5 annotations). If a MBean with the same name
      has been exposed before, the new exposal is skipped (ignoreExisting)  -->
<bean id="eSciDoc.core.common.MBeanExporter" 
    class="org.springframework.jmx.export.annotation.AnnotationMBeanExporter"
    lazy-init="false">
    <property name="autodetect" value="true"/>      
    <property name="registrationBehaviorName" value="REGISTRATION_IGNORE_EXISTING"/>
</bean>

<!-- end of JMX -->
 


