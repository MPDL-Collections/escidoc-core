<?xml version="1.0" encoding="UTF-8"?>
<project name="eSciDoc Core - database initialization file" default="build">

  <property name="install.dir" location="${INSTALL_PATH}" />
	<property name="root.jdbc.url" value="jdbc:${jdbc.database.identifier}://${database.server.name}:${database.server.port}/${root.database.name}" />
	<property name="escidoc.jdbc.url" value="jdbc:${jdbc.database.identifier}://${database.server.name}:${database.server.port}/${escidoc.database.name}" />
  <property name="sql.dir" location="${install.dir}/core/sql" description="The directory holding the sql scripts" />

	<path id="database.classpath">
		<pathelement location="${install.dir}/core/${jdbc.driver.jar}" />
	</path>

	<target name="build" description="Creates databases escidoc-core, fedora32, and riTriples (target create_all). CAVEAT: if databases preexist, they will be dropped first. All data will be LOST!">
		<!-- creates, initializes, and populates all schemas -->
		<echo level="info">Creating databases and roles on ${escidoc.jdbc.url}, using (${root.database.userid}/${root.database.password})</echo>
		<antcall target="create-db" />
		<echo level="info">Creating eSciDoc Core tables and AA roles on ${escidoc.jdbc.url}, using (${escidoc.database.userid}/${escidoc.database.password})</echo>
		<antcall target="create-tables" />
		<antcall target="create-roles" />
	</target>

	<target name="create-db" description="Creates all necessary database and roles for eSciDoc">
		<!-- creates all databases and schemas -->
		<echo level="info">Creating databases, schemas, and roles</echo>
		<echo level="info">Executing script ${sql.dir}/drop-db.sql</echo>
		<sql classpathref="database.classpath" 
		     driver="${jdbc.driver.class}" 
		     url="${root.jdbc.url}" 
		     userid="${root.database.userid}" 
		     password="${root.database.password}" 
		     src="${sql.dir}/drop-db.sql"
		     ${DatabaseAutocommit} />
		<echo level="info">Executing script ${sql.dir}/create-db.sql</echo>
		<sql classpathref="database.classpath" 
		     driver="${jdbc.driver.class}" 
		     url="${root.jdbc.url}" 
		     userid="${root.database.userid}" 
		     password="${root.database.password}" 
		     src="${sql.dir}/create-db.sql"
		     ${DatabaseAutocommit} />
	</target>

	<target name="create-tables" description="Creates all necessary tables for eSciDoc">
		<!-- creates all necessary tables -->
		<echo level="info">Creating all necessary tables for eSciDoc</echo>
		<!-- Create tables for AA and populate -->
		<antcall target="execute-sql">
			<param name="script" value="aa/aa.create.sql" />
		</antcall>
                <antcall target="execute-sql">
                        <param name="script" value="adm/adm.create.sql" />
                </antcall>
                <antcall target="execute-sql">
                        <param name="script" value="oai/oai.create.sql" />
                </antcall>
                <antcall target="execute-sql">
                        <param name="script" value="om/om.create.sql" />
                </antcall>
                <antcall target="execute-sql">
                        <param name="script" value="sm/sm.create.sql" />
                </antcall>
                <antcall target="execute-sql">
                        <param name="script" value="st/st.create.sql" />
                </antcall>
        </target>

	<target name="create-roles" description="Creates basic user accounts and necessary system roles">
		<!-- creates four basic user accounts and all necessary roles -->
		<echo level="info">Creating basic user accounts</echo>
		<antcall target="execute-sql">
			<param name="script" value="aa.init.user-accounts.common.sql" />
		</antcall>
		<!-- creates necessary system roles -->
		<echo level="info">Creating necessary system roles</echo>
		<antcall target="execute-sql">
			<param name="script" value="aa/aa.init.roles.*.sql" />
		</antcall>

		<!-- granting newly created user accounts with necessary policies -->
		<echo level="info">Granting newly created user accounts with necessary policies</echo>
		<antcall target="execute-sql">
			<param name="script" value="aa.init.grants.common.sql" />
		</antcall>

                <!-- creates necessary actions -->
                <echo level="info">Creating necessary actions</echo>
                <antcall target="execute-sql">
                        <param name="script" value="aa/aa.init.actions.sql" />
                </antcall>

                <!-- creates necessary method mappings -->
                <echo level="info">Creating necessary method mappings</echo>
                <antcall target="execute-sql">
                        <param name="script" value="aa/aa.init.method-mappings.*.sql" />
                </antcall>
	</target>

	<target name="execute-sql" description="Processes SQL scripts">
		<echo level="info">Executing script(s) ${sql.dir}/${script}</echo>
		<sql classpathref="database.classpath" 
		     driver="${jdbc.driver.class}" 
		     url="${escidoc.jdbc.url}" 
		     userid="${escidoc.database.userid}" 
		     password="${escidoc.database.password}" 
		     ${DatabaseAutocommit}>
                        <path>
                                <fileset dir="${sql.dir}">
                                        <include name="${script}"/>
                                </fileset>
                        </path>
                </sql>
	</target>

</project>
