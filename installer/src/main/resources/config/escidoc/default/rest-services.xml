<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cxf="http://cxf.apache.org/core"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
       http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd"
       default-lazy-init="false">

  <!-- Available services -->
  <bean id="service.ir.item"                  class="org.escidoc.core.om.internal.ItemRestServiceImpl"/>
  <bean id="service.ir.item-filter"           class="org.escidoc.core.om.internal.ItemsRestServiceImpl"/>
  <bean id="service.ir.container"             class="org.escidoc.core.om.internal.ContainerRestServiceImpl"/>
  <bean id="service.ir.container-filter"      class="org.escidoc.core.om.internal.ContainersRestServiceImpl"/>
  <bean id="service.ir.ingest"                class="org.escidoc.core.om.internal.IngestRestServiceImpl"/>
  <bean id="service.ir.content-rel"           class="org.escidoc.core.content.relation.internal.ContentRelationRestServiceImpl"/>
  <bean id="service.ir.content-rel-filter"    class="org.escidoc.core.content.relation.internal.ContentRelationsRestServiceImpl"/>
  <bean id="service.ir.context"               class="org.escidoc.core.context.internal.ContextRestServiceImpl"/>
  <bean id="service.ir.context-filter"        class="org.escidoc.core.context.internal.ContextsRestServiceImpl"/>
  <bean id="service.cmm.content-model"        class="org.escidoc.core.cmm.internal.ContentModelRestServiceImpl"/>
  <bean id="service.cmm.content-model-filter" class="org.escidoc.core.cmm.internal.ContentModelsRestServiceImpl"/>
  <bean id="service.oai.oai"                  class="org.escidoc.core.oai.internal.OAIRestServiceImpl"/>
  <bean id="service.oai.oai-filter"           class="org.escidoc.core.oai.internal.OAIsRestServiceImpl"/>
  <bean id="service.oum.ou"                   class="org.escidoc.core.oum.internal.OrganizationalUnitRestServiceImpl"/>
  <bean id="service.oum.ou-filter"            class="org.escidoc.core.oum.internal.OrganizationalUnitsRestServiceImpl"/>
  <bean id="service.staging"                  class="org.escidoc.core.st.internal.StagingRestServiceImpl"/>
  <bean id="service.tme"                      class="org.escidoc.core.tme.internal.TmeRestServiceImpl"/>
  <bean id="service.aa.user-account"          class="org.escidoc.core.aa.internal.UserAccountRestServiceImpl"/>
  <bean id="service.aa.user-account-filter"   class="org.escidoc.core.aa.internal.UserAccountsRestServiceImpl"/>
  <bean id="service.aa.user-group"            class="org.escidoc.core.aa.internal.UserGroupRestServiceImpl"/>
  <bean id="service.aa.user-group-filter"     class="org.escidoc.core.aa.internal.UserGroupsRestServiceImpl"/>
  <bean id="service.aa.grants"                class="org.escidoc.core.aa.internal.GrantsRestServiceImpl"/>
  <bean id="service.aa.role"                  class="org.escidoc.core.aa.internal.RoleRestServiceImpl"/>
  <bean id="service.aa.role-filter"           class="org.escidoc.core.aa.internal.RolesRestServiceImpl"/>
  <bean id="service.aa.pdp"                   class="org.escidoc.core.aa.internal.PolicyDecisionPointRestServiceImpl"/>
  <bean id="service.sm.aggr-def"              class="org.escidoc.core.sm.internal.AggregationDefinitionRestServiceImpl"/>
  <bean id="service.sm.aggr-def-filter"       class="org.escidoc.core.sm.internal.AggregationDefinitionsRestServiceImpl"/>
  <bean id="service.sm.report-def"            class="org.escidoc.core.sm.internal.ReportDefinitionRestServiceImpl"/>
  <bean id="service.sm.report-def-filter"     class="org.escidoc.core.sm.internal.ReportDefinitionsRestServiceImpl"/>
  <bean id="service.sm.preprocessing"         class="org.escidoc.core.sm.internal.PreprocessingRestServiceImpl"/>
  <bean id="service.sm.report"                class="org.escidoc.core.sm.internal.ReportRestServiceImpl"/>
  <bean id="service.sm.scope"                 class="org.escidoc.core.sm.internal.ScopeRestServiceImpl"/>
  <bean id="service.sm.scope-filter"          class="org.escidoc.core.sm.internal.ScopesRestServiceImpl"/>
  <bean id="service.sm.statistic-data"        class="org.escidoc.core.sm.internal.StatisticDataRestServiceImpl"/>
  <bean id="service.adm.admin"                class="org.escidoc.core.adm.internal.AdminRestServiceImpl"/>
  <bean id="service.fedora.deviation"         class="org.escidoc.core.fedoradeviation.internal.FedoraDeviationRestServiceImpl"/>

  <!-- Security Issues -->
  <!-- 1. Avoid XML payload attacks (You may change this configuration to your needs) -->
  <bean id="depthInterceptor" class="org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor">
    <!-- Total number of elements in the XML payload -->
    <property name="elementCountThreshold" value="5000"/>
    <!-- Total number of child elements in the XML payload -->
    <property name="innerElementCountThreshold" value="3000"/>
    <!-- Maximum stack depth of the XML payload -->
    <property name="innerElementLevelThreshold" value="20"/>
  </bean>
  <!-- 2. Nothing yet -->

  <!--
  Server Configuration

  We do not need dynamic sub-resource resolution, because of we define our JAX-RS interfaces and do not dynamically add
  other endpoints. This will increase performance.
  -->
  <jaxrs:server id="RestServices" address="" staticSubresourceResolution="true">
    <!-- TODO: enable when CXF 2.6.2 got released -->
    <!--jaxrs:schemaLocations>
      <jaxrs:schemaLocation>classpath*:/xsd/*.xsd</jaxrs:schemaLocation>
    </jaxrs:schemaLocations-->
    <jaxrs:providers>
      <ref bean="escidocJaxbProvider"/>
      <ref bean="escidocExceptionMapper"/>
      <ref bean="cachedOutputStreamMessageBodyReader"/>
      <ref bean="cachedOutputStreamMessageBodyWriter"/>
    </jaxrs:providers>
    <jaxrs:serviceBeans>
      <!-- Configured services available at runtime -->
      <ref bean="service.ir.item"/>
      <ref bean="service.ir.item-filter"/>
      <ref bean="service.ir.container"/>
      <ref bean="service.ir.container-filter"/>
      <ref bean="service.ir.ingest"/>
      <ref bean="service.ir.content-rel"/>
      <ref bean="service.ir.content-rel-filter"/>
      <ref bean="service.ir.context"/>
      <ref bean="service.ir.context-filter"/>
      <ref bean="service.cmm.content-model"/>
      <ref bean="service.cmm.content-model-filter"/>
      <ref bean="service.oai.oai"/>
      <ref bean="service.oai.oai-filter"/>
      <ref bean="service.oum.ou"/>
      <ref bean="service.oum.ou-filter"/>
      <ref bean="service.staging"/>
      <ref bean="service.tme"/>
      <ref bean="service.aa.user-account"/>
      <ref bean="service.aa.user-account-filter"/>
      <ref bean="service.aa.user-group"/>
      <ref bean="service.aa.user-group-filter"/>
      <ref bean="service.aa.grants"/>
      <ref bean="service.aa.role"/>
      <ref bean="service.aa.role-filter"/>
      <ref bean="service.aa.pdp"/>
      <ref bean="service.sm.aggr-def"/>
      <ref bean="service.sm.aggr-def-filter"/>
      <ref bean="service.sm.report-def"/>
      <ref bean="service.sm.report-def-filter"/>
      <ref bean="service.sm.preprocessing"/>
      <ref bean="service.sm.report"/>
      <ref bean="service.sm.scope"/>
      <ref bean="service.sm.scope-filter"/>
      <ref bean="service.sm.statistic-data"/>
      <ref bean="service.adm.admin"/>
      <ref bean="service.fedora.deviation"/>
    </jaxrs:serviceBeans>
    <jaxrs:features>
      <ref bean="compressGZIPFeature"/>
      <ref bean="loggingFeature"/>
    </jaxrs:features>
    <jaxrs:inInterceptors>
      <ref bean="depthInterceptor"/>
    </jaxrs:inInterceptors>
  </jaxrs:server>
</beans>