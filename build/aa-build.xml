<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ CDDL HEADER START
  ~
  ~ The contents of this file are subject to the terms of the Common Development and Distribution License, Version 1.0
  ~ only (the "License"). You may not use this file except in compliance with the License.
  ~
  ~ You can obtain a copy of the license at license/ESCIDOC.LICENSE or http://www.escidoc.de/license. See the License
  ~ for the specific language governing permissions and limitations under the License.
  ~
  ~ When distributing Covered Code, include this CDDL HEADER in each file and include the License file at
  ~ license/ESCIDOC.LICENSE. If applicable, add the following below this CDDL HEADER, with the fields enclosed by
  ~ brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
  ~
  ~ CDDL HEADER END
  ~
  ~ Copyright 2006-2011 Fachinformationszentrum Karlsruhe Gesellschaft fuer wissenschaftlich-technische Information mbH
  ~ and Max-Planck-Gesellschaft zur Foerderung der Wissenschaft e.V. All rights reserved. Use is subject to license
  ~ terms.
  -->

<project name="AA Build" basedir=".." default="build_component">

    <property file="build/escidoc-build.properties" />
	<property file="build/escidoc-build.default.properties" />
    
    <property name="component" value="aa"/>
    <property name="hibernate.cascade" value="all,delete-orphan"/>
    <property name="gen.xdoclet-tag" value="true"/>
    <property name="gui" value="true"/>
    <property name="jdbc.jar"
        value="${jdbc.driver.jar}"/>
    <property name="middlegen.lib.dir"
        value="build/lib/middlegen-2.1.91/lib"/>
    <property name="database.driver" value="${jdbc.driver.class}"/>
    <property name="database.catalog" value=""/>
    <property name="database.url"
        value="jdbc:${jdbc.database.identifier}://${database.server.name}:${database.server.port}/${escidoc.database.name}"/>
    <property name="database.schema" value="aa"/>
    <property name="dest.dir" value="${component}/gen"/>
    <property name="package"
        value="de.escidoc.core.aa.business.persistence"/>
    <property name="idgenerator"
        value="de.escidoc.core.common.persistence.EscidocIdGenerator"/>
    <property name="src.dir" value="${component}/src"/>
    
    <!-- Clears the gen forder for this component -->
    <target name="clear_gen">
        <delete>
            <fileset dir="${dest.dir}" includes="**/*"/>
        </delete>
    </target>
    
    
    <!-- prepare generation from database schema. Builds the database(s). -->
    <target name="prepare">
        
        <path id="middlegen.classpath">
            <pathelement path="${jdbc.jar}"/>
            <fileset dir="${middlegen.lib.dir}" includes="*.jar"/>
        </path>
        
        <available property="middlegen"
            classname="middlegen.MiddlegenTask"
            classpathref="middlegen.classpath"/>
        
        <taskdef name="middlegen" classname="middlegen.MiddlegenTask"
            classpathref="middlegen.classpath"/>
    </target>
    
    <!-- Can be used to only generate hibernate mapping of persistent classes
    for this component-->
	
	
    <target name="gen-hbm" depends="prepare">
    
    <echo>##################################################################################################################</echo>
    <echo>#</echo>
    <echo># WARNING:</echo>
    <echo># ========</echo>
    <echo># The middlegen generation step is NOT performed.</echo>
    <echo># Instead, database setup files and hibernate mappings have to be kept in sync, manually.</echo>
    <echo># This is needed to enable the usage of collection of values in the hibernate mappings.</echo>
    <echo>#</echo>	
    <echo>##################################################################################################################</echo>
    <echo> </echo>
    <echo>Copying hibernate mapping files to gen folder to enable generation of java classes.</echo>
    
    <copy todir="${dest.dir}">
        <fileset dir="${src.dir}">
            <include name="**/*.hbm.xml"/>
        </fileset>
    </copy>
    
    	<!--  <property name="path" refid="middlegen.classpath" />
    	<echo>aa-build gen-hbm ${basedir}</echo>
    	<echo>Classpath: ${path}</echo>
        <condition property="prefsdir" value="${dest.dir}">
            <not>
                <isset property="prefsdir"/>
            </not>
        </condition>
        <middlegen appname="${package}" prefsdir="${src.dir}" gui="${gui}"
            databaseurl="${database.url}" driver="${database.driver}"
            username="${escidoc.database.userid}" password="${escidoc.database.password}"
            schema="${database.schema}" catalog="${database.catalog}">
            <hibernate version="3.0" destination="${dest.dir}"
                package="${package}" genXDocletTags="${gen.xdoclet-tag}"
                standardCascade="${hibernate.cascade}"
                standardGeneratorScheme="${idgenerator}"
                databaseSchema="${database.schema}"
                javaTypeMapper="middlegen.plugins.hibernate.HibernateJavaTypeMapper"/>
            <table name="escidoc_policies"/>
            <table name="actions"/>
            <table name="escidoc_role"/>
            <table name="scope_def"/>
            <table name="user_account"/>
            <table name="role_grant"/>
            <table name="unsecured_action_list"/>
            <table name="user_login_data"/>
        </middlegen>
        <ant antfile="build/middlegen-build.xml"
            target="prepare-base-class" dir="">
            <property name="destination" value="${dest.dir}"/>
            <property name="hbmsource" value="**/MethodMapping.hbm.xml"/>
            <property name="generatedclass"
                value="${package}.MethodMappingBase"/>
        </ant>
        <ant antfile="build/middlegen-build.xml"
            target="prepare-base-class" dir="">
            <property name="destination" value="${dest.dir}"/>
            <property name="hbmsource"
                value="**/InvocationMapping.hbm.xml"/>
            <property name="generatedclass"
                value="${package}.InvocationMappingBase"/>
        </ant>
        <ant antfile="build/middlegen-build.xml"
            target="prepare-base-class" dir="">
            <property name="destination" value="${dest.dir}"/>
            <property name="hbmsource" value="**/Action.hbm.xml"/>
            <property name="generatedclass"
                value="${package}.ActionBase"/>
        </ant>
        <ant antfile="build/middlegen-build.xml"
            target="prepare-base-class" dir="">
            <property name="destination" value="${dest.dir}"/>
            <property name="hbmsource" value="**/ScopeDef.hbm.xml"/>
            <property name="generatedclass"
                value="${package}.ScopeDefBase"/>
        </ant>
        <ant antfile="build/middlegen-build.xml"
            target="prepare-base-class" dir="">
            <property name="destination" value="${dest.dir}"/>
            <property name="hbmsource" value="**/EscidocRole.hbm.xml"/>
            <property name="generatedclass"
                value="${package}.EscidocRoleBase"/>
        </ant>
        <ant antfile="build/middlegen-build.xml"
            target="prepare-base-class" dir="">
            <property name="destination" value="${dest.dir}"/>
            <property name="hbmsource" value="**/UserAccount.hbm.xml"/>
            <property name="generatedclass"
                value="${package}.UserAccountBase"/>
        </ant>
        <ant antfile="build/middlegen-build.xml"
            target="prepare-base-class" dir="">
            <property name="destination" value="${dest.dir}"/>
            <property name="hbmsource" value="**/RoleGrant.hbm.xml"/>
            <property name="generatedclass"
                value="${package}.RoleGrantBase"/>
        </ant>-->
    </target>
    
    
    <!-- Can be used to only generate persistent classes for this component-->
    <target name="gen-java">
        <ant antfile="build/hibernate-tools-build.xml" target="gen-java">
            <property name="destination" value="${dest.dir}"/>
        </ant>
    </target>
    
    <!-- Can be used to only generate XDoclet and persistent classes for this 
    component-->
    <target name="build"
        depends="clear_gen, xdoclet_complete, gen-hbm, gen-java">
    </target>
    
    <!-- Generate, Build one component and Deploy all components-->
    <target name="build_component" depends="build">
        <ant antfile="build/java-build.xml" target="clean_component"
            dir="">
            <property name="component" value="aa.jar"/>
        </ant>
        <ant antfile="build/java-build.xml" target="compile" dir="">
            <property name="destination" value="escidoc-core.ear/aa.jar/"/>
            <property name="component" value="aa"/>
        </ant>
        <ant antfile="build/java-build.xml" target="copy-non-java-files" dir="">
        </ant>
        
        <!-- AOP compile -->
        <ant antfile="build/helper-build.xml" target="aop-compile" dir=""/>
        
        <ant antfile="build.xml" target="re-deploy-ear"/>
    </target>
    
    <!-- Can be used to only generate XDoclet for this component-->
    <target name="xdoclet_complete">
        <ant antfile="build/xdoclet-build.xml"
            target="xdoclet_generation">
            <property name="source" value="aa"/>
        </ant>
        <ant antfile="build/xdoclet-build.xml" target="springSet-remote"/>
    </target>
    
    <!-- Can be used to only generate EJB and Webservice-related 
    XDoclet for this component-->
    <target name="xdoclet_ejb">
        <ant antfile="build/xdoclet-build.xml" target="ejbSet">
            <property name="source" value="aa"/>
        </ant>
    </target>
    
    
    <!-- Can be used to only generate Spring-related XDoclet for this component-->
    <target name="xdoclet_spring">
        <ant antfile="build/xdoclet-build.xml" target="springSet">
            <property name="source" value="aa"/>
        </ant>
        <ant antfile="build/xdoclet-build.xml" target="springSet-remote"/>
    </target>
    
    <target name="compile">
            <ant antfile="build/java-build.xml" target="compile" dir="">
            <property name="destination"
                value="escidoc-core.ear/aa.jar/" />
            <property name="component" value="aa" />
        </ant>
    
    </target>
</project>
