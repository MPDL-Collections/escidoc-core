<?xml version="1.0" encoding="UTF-8"?>
<project name="oai Build" basedir="..">
	<property file="build/escidoc-build.properties" />
	<property file="build/escidoc-build.default.properties" />
		    
		    <property name="component" value="oai"/>
		    <property name="hibernate.cascade" value="all,delete-orphan"/>
		    <property name="gen.xdoclet-tag" value="true"/>
		    <property name="gui" value="true"/>
		    <property name="jdbc.jar"
		        value="${jdbc.driver.jar}"/>
		    <property name="middlegen.lib.dir"
		        value="build/lib/middlegen-2.1.91/lib"/>
		    <property name="database.driver" value="${jdbc.driver.class}"/>
		    <property name="database.catalog" value=""/>
		    <property name="database.url"
		        value="jdbc:${jdbc.database.identifier}://${database.server.name}:${database.server.port}/${escidoc.database.name}"/>
		    <property name="database.schema" value="oai"/>
		    <property name="dest.dir" value="${component}/gen"/>
		    <property name="package"
		        value="de.escidoc.core.oai.business.persistence"/>
		   <!-- <property name="idgenerator"
		        value="de.escidoc.core.common.persistence.EscidocIdGenerator"/>-->
		    <property name="src.dir" value="${component}/src"/>
	
	<target name="build_component" depends="build">
			<ant antfile="build/xdoclet-build.xml" target="xdoclet_generation" dir="">
				<property name="source" value="oai" />
			</ant>
			<ant antfile="build/xdoclet-build.xml" target="springSet-remote"></ant>
			<ant antfile="build/java-build.xml" target="clean_component" dir="">
				<property name="component" value="oai.jar" />
			</ant>
			<ant antfile="build/java-build.xml" target="compile" dir="">
				<property name="destination" value="escidoc-core.ear/oai.jar/" />
				<property name="component" value="oai" />	
			</ant>
			<ant antfile="build/java-build.xml" target="copy" dir="">
				<property name="destination" value="escidoc-core.ear/oai.jar/" />
				<property name="component" value="oai" />	
			</ant>
	        
	        <!-- AOP compile -->
			<ant antfile="build/helper-build.xml" target="aop-compile" dir="" />
	        
			<ant antfile="build.xml" target="re-deploy-ear"></ant>
	    </target>
	
	<target name="build"
		        depends="clear_gen, xdoclet_complete, gen-hbm, gen-java">
		    </target>
	
	<!-- Can be used to only generate XDoclet for this component-->
	<target name="xdoclet_complete">
		<ant antfile="build/xdoclet-build.xml" target="xdoclet_generation">
			<property  name="source" value="oai"/>
		</ant>	
		<ant antfile="build/xdoclet-build.xml" target="springSet-remote" />
	</target>

	<!-- Can be used to only generate EJB and Webservice-related 
	XDoclet for this component-->
	<target name="xdoclet_ejb">
		<ant antfile="build/xdoclet-build.xml" target="ejbSet">
			<property  name="source" value="oai"/>
		</ant>	
	</target>

	<!-- Can be used to only generate Spring-related XDoclet for this component-->
	<target name="xdoclet_spring">
		<ant antfile="build/xdoclet-build.xml" target="springSet">
			<property  name="source" value="oai"/>
		</ant>	
		<ant antfile="build/xdoclet-build.xml" target="springSet-remote" />
	</target>
	
	<target name="compile">
			<ant antfile="build/java-build.xml" target="compile" dir="">
				<property name="destination" value="escidoc-core.ear/oai.jar/" />
				<property name="component" value="oai" />	
			</ant>
		</target>
		<!-- prepare generation from database schema. Builds the database(s). -->
		    <target name="prepare">
		        
		        <path id="middlegen.classpath">
		            <pathelement path="${jdbc.jar}"/>
		            <fileset dir="${middlegen.lib.dir}" includes="*.jar"/>
		        </path>
		        
		        <available property="middlegen"
		            classname="middlegen.MiddlegenTask"
		            classpathref="middlegen.classpath"/>
		        
		        <taskdef name="middlegen" classname="middlegen.MiddlegenTask"
		            classpathref="middlegen.classpath"/>
		    </target>
		    
		    <!-- Can be used to only generate hibernate mapping of persistent classes
		    for this component-->
			
			
		    <target name="gen-hbm" depends="prepare">
		    
		    <echo>##################################################################################################################</echo>
		    <echo>#</echo>
		    <echo># WARNING:</echo>
		    <echo># ========</echo>
		    <echo># The middlegen generation step is NOT performed.</echo>
		    <echo># Instead, database setup files and hibernate mappings have to be kept in sync, manually.</echo>
		    <echo># This is needed to enable the usage of collection of values in the hibernate mappings.</echo>
		    <echo>#</echo>	
		    <echo>##################################################################################################################</echo>
		    <echo> </echo>
		    <echo>Copying hibernate mapping files to gen folder to enable generation of java classes.</echo>
		    
		    <copy todir="${dest.dir}">
		        <fileset dir="${src.dir}">
		            <include name="**/*.hbm.xml"/>
		        </fileset>
		    </copy>
		    
		    	<!--  <property name="path" refid="middlegen.classpath" />
		    	<echo>om-build gen-hbm ${basedir}</echo>
		    	<echo>Classpath: ${path}</echo>
		        <condition property="prefsdir" value="${dest.dir}">
		            <not>
		                <isset property="prefsdir"/>
		            </not>
		        </condition>
		        <middlegen appname="${package}" prefsdir="${src.dir}" gui="${gui}"
		            databaseurl="${database.url}" driver="${database.driver}"
		            username="${escidoc.database.userid}" password="${escidoc.database.password}"
		            schema="${database.schema}" catalog="${database.catalog}">
		            <hibernate version="3.0" destination="${dest.dir}"
		                package="${package}" genXDocletTags="${gen.xdoclet-tag}"
		                standardCascade="${hibernate.cascade}"
		                standardGeneratorScheme="${idgenerator}"
		                databaseSchema="${database.schema}"
		                javaTypeMapper="middlegen.plugins.hibernate.HibernateJavaTypeMapper"/>
		            <table name="set_definition"/>
		        </middlegen>
		        <ant antfile="build/middlegen-build.xml"
		            target="prepare-base-class" dir="">
		            <property name="destination" value="${dest.dir}"/>
		            <property name="hbmsource" value="**/SetDefinition.hbm.xml"/>
		            <property name="generatedclass"
		                value="${package}.SetDefinitionBase"/>
		        </ant>-->
		    </target>
		    
		    
		    <!-- Can be used to only generate persistent classes for this component-->
		    <target name="gen-java">
		        <ant antfile="build/hibernate-tools-build.xml" target="gen-java">
		            <property name="destination" value="${dest.dir}"/>
		        </ant>
		    </target>
		
		 <!-- Clears the gen forder for this component -->
		    <target name="clear_gen">
		        <delete>
		            <fileset dir="${dest.dir}" includes="**/*"/>
		        </delete>
		    </target>
		    


</project>
