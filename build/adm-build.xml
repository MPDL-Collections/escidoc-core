<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ CDDL HEADER START
  ~
  ~ The contents of this file are subject to the terms of the Common Development and Distribution License, Version 1.0
  ~ only (the "License"). You may not use this file except in compliance with the License.
  ~
  ~ You can obtain a copy of the license at license/ESCIDOC.LICENSE or http://www.escidoc.de/license. See the License
  ~ for the specific language governing permissions and limitations under the License.
  ~
  ~ When distributing Covered Code, include this CDDL HEADER in each file and include the License file at
  ~ license/ESCIDOC.LICENSE. If applicable, add the following below this CDDL HEADER, with the fields enclosed by
  ~ brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
  ~
  ~ CDDL HEADER END
  ~
  ~ Copyright 2006-2011 Fachinformationszentrum Karlsruhe Gesellschaft fuer wissenschaftlich-technische Information mbH
  ~ and Max-Planck-Gesellschaft zur Foerderung der Wissenschaft e.V. All rights reserved. Use is subject to license
  ~ terms.
  -->

<project name="Admin Manager Build" basedir=".." default="build_component">

    <property file="build/escidoc-build.properties" />
	<property file="build/escidoc-build.default.properties" />

    <property name="component" value="adm"/>
    <property name="dest.dir" value="${component}/gen"/>
    <property name="src.dir" value="${component}/src"/>

    <!-- Clears the gen forder for this component -->
    <target name="clear_gen">
        <delete>
            <fileset dir="${dest.dir}" includes="**/*"/>
        </delete>
    </target>
    
    <!-- Can be used to only generate XDoclet and persistent classes for this 
    component-->
    <target name="build" depends="clear_gen, xdoclet_complete"/>
    
    <!-- Generate, Build one component and Deploy all components-->
    <target name="build_component" depends="build">
        <ant antfile="build/xdoclet-build.xml" target="xdoclet_generation" dir="">
            <property name="source" value="${component}"/>
        </ant>
        <ant antfile="build/xdoclet-build.xml" target="springSet-remote"/>
        <ant antfile="build/java-build.xml" target="clean_component"
            dir="">
            <property name="component" value="${component}.jar"/>
        </ant>
        <ant antfile="build/java-build.xml" target="compile" dir="">
            <property name="destination" value="escidoc-core.ear/${component}.jar/"/>
            <property name="component" value="${component}"/>
        </ant>
        <ant antfile="build/java-build.xml" target="copy-non-java-files" dir="">
        </ant>
        
        <!-- AOP compile -->
        <ant antfile="build/helper-build.xml" target="aop-compile" dir=""/>
        
        <ant antfile="build.xml" target="re-deploy-ear"/>
    </target>
    
    <!-- Can be used to only generate XDoclet for this component-->
    <target name="xdoclet_complete">
        <ant antfile="build/xdoclet-build.xml"
            target="xdoclet_generation">
            <property name="source" value="${component}"/>
        </ant>
        <ant antfile="build/xdoclet-build.xml" target="springSet-remote"/>
    </target>
    
    <!-- Can be used to only generate EJB and Webservice-related 
    XDoclet for this component-->
    <target name="xdoclet_ejb">
        <ant antfile="build/xdoclet-build.xml" target="ejbSet">
            <property name="source" value="${component}"/>
        </ant>
    </target>
    
    
    <!-- Can be used to only generate Spring-related XDoclet for this component-->
    <target name="xdoclet_spring">
        <ant antfile="build/xdoclet-build.xml" target="springSet">
            <property name="source" value="${component}"/>
        </ant>
        <ant antfile="build/xdoclet-build.xml" target="springSet-remote"/>
    </target>
    
</project>
