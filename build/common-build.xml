<?xml version="1.0" encoding="UTF-8"?>
<project name="Common Build" basedir=".." default="build_component">
	
	<property file="build/escidoc-build.properties" />
	<property file="build/escidoc-build.default.properties" />

	<property name="myComponent" value="common" />
	<property name="src.dir" value="${myComponent}/src" />
	<property name="dest.dir" value="${myComponent}/gen" />
	<property name="binding.info.dir"
		value="${src.dir}/META-INF/bindings" />

	<!-- properties for hibernate generation -->
	<property name="component" value="${myComponent}" />
	<property name="hibernate.cascade" value="all,delete-orphan" />
	<property name="gen.xdoclet-tag" value="true" />
	<property name="gui" value="false" />
	<property name="jdbc.jar"
		value="${jdbc.driver.jar}" />
	<property name="middlegen.lib.dir"
		value="build/lib/middlegen-2.1.91/lib/" />

	<property name="database.driver" value="${jdbc.driver.class}" />
	<property name="database.catalog" value="" />
	<property name="database.url"
		value="jdbc:${jdbc.database.identifier}://${database.server.name}:${database.server.port}/${escidoc.database.name}" />
	<property name="database.schema" value="aa" />
	<property name="dest.dir" value="${component}/gen" />
	<property name="package"
		value="de.escidoc.core.common.util.security.persistence" />
	<property name="idgenerator"
		value="de.escidoc.core.common.persistence.EscidocIdGenerator" />
	<property name="src.dir" value="${component}/src" />

	<!-- Generate, Build one component and Deploy all components-->
	<target name="build_component" depends="gen-hbm, gen-java">
		<ant antfile="build/xdoclet-build.xml"
			target="xdoclet_generation" dir="">
			<property name="source" value="common" />
		</ant>
		<ant antfile="build/xdoclet-build.xml"
			target="springSet-remote">
		</ant>
		<antcall target="jaxb_build" />
		<ant antfile="build/java-build.xml" target="clean_component"
			dir="">
			<property name="component" value="common.jar" />
		</ant>
		<ant antfile="build/java-build.xml" target="compile" dir="">
			<property name="destination"
				value="escidoc-core.ear/common.jar/" />
			<property name="component" value="common" />
		</ant>
		<ant antfile="build/java-build.xml" target="copy-non-java-files" dir="">
			<property name="destination"
				value="escidoc-core.ear/common.jar/" />
			<property name="component" value="common" />
		</ant>

		<!-- AOP compile -->
		<ant antfile="build/helper-build.xml" target="aop-compile"
			dir="" />

		<ant antfile="build.xml" target="re-deploy-ear"></ant>
	</target>


	<!-- prepare generation from database schema. Builds the database(s). -->
	<target name="prepare">

		<path id="middlegen.classpath">
			<pathelement path="${jdbc.jar}" />
			<fileset dir="${middlegen.lib.dir}" includes="*.jar" />
		</path>

		<available property="middlegen"
			classname="middlegen.MiddlegenTask"
			classpathref="middlegen.classpath" />

		<taskdef name="middlegen" classname="middlegen.MiddlegenTask"
			classpathref="middlegen.classpath" />
	</target>

	<!-- Can be used to only generate hibernate mapping of persistent classes
		for this component-->
	<target name="gen-hbm" depends="prepare">
		<condition property="prefsdir" value="${dest.dir}">
			<not>
				<isset property="prefsdir" />
			</not>
		</condition>
		<middlegen appname="${package}" prefsdir="${src.dir}"
			gui="${gui}" databaseurl="${database.url}"
			driver="${database.driver}" username="${escidoc.database.userid}"
			password="${escidoc.database.password}" schema="${database.schema}"
			catalog="${database.catalog}">
			<hibernate version="3.0" destination="${dest.dir}"
				package="${package}" genXDocletTags="${gen.xdoclet-tag}"
				standardCascade="${hibernate.cascade}"
				standardGeneratorScheme="${idgenerator}"
				databaseSchema="${database.schema}"
				javaTypeMapper="middlegen.plugins.hibernate.HibernateJavaTypeMapper" />
			<table name="method_mappings" />
			<table name="invocation_mappings" />
		</middlegen>
		<ant antfile="build/middlegen-build.xml"
			target="prepare-base-class" dir="">
			<property name="destination" value="${dest.dir}" />
			<property name="hbmsource" value="**/MethodMapping.hbm.xml" />
			<property name="generatedclass"
				value="${package}.MethodMappingBase" />
		</ant>
		<ant antfile="build/middlegen-build.xml"
			target="prepare-base-class" dir="">
			<property name="destination" value="${dest.dir}" />
			<property name="hbmsource"
				value="**/InvocationMapping.hbm.xml" />
			<property name="generatedclass"
				value="${package}.InvocationMappingBase" />
		</ant>
		<ant antfile="build/middlegen-build.xml"
			target="prepare-base-class" dir="">
			<property name="destination" value="${dest.dir}" />
			<property name="hbmsource" value="**/Action.hbm.xml" />
			<property name="generatedclass"
				value="${package}.ActionBase" />
		</ant>
		<ant antfile="build/middlegen-build.xml"
			target="prepare-base-class" dir="">
			<property name="destination" value="${dest.dir}" />
			<property name="hbmsource" value="**/EscidocRole.hbm.xml" />
			<property name="generatedclass"
				value="${package}.EscidocRoleBase" />
		</ant>
		<ant antfile="build/middlegen-build.xml"
			target="prepare-base-class" dir="">
			<property name="destination" value="${dest.dir}" />
			<property name="hbmsource" value="**/UserAccount.hbm.xml" />
			<property name="generatedclass"
				value="${package}.UserAccountBase" />
		</ant>
		<ant antfile="build/middlegen-build.xml"
			target="prepare-base-class" dir="">
			<property name="destination" value="${dest.dir}" />
			<property name="hbmsource" value="**/RoleGrant.hbm.xml" />
			<property name="generatedclass"
				value="${package}.RoleGrantBase" />
		</ant>
	</target>


	<!-- Can be used to only generate persistent classes for this component-->
	<target name="gen-java">
		<ant antfile="build/hibernate-tools-build.xml" target="gen-java">
			<property name="destination" value="${dest.dir}" />
		</ant>
	</target>

	<!-- Can be used to only generate XDoclet for this component-->
	<target name="xdoclet_complete">
		<ant antfile="build/xdoclet-build.xml"
			target="xdoclet_generation">
			<property name="source" value="${myComponent}" />
		</ant>
		<ant antfile="build/xdoclet-build.xml"
			target="springSet-remote" />
	</target>

	<!-- Can be used to only generate EJB and Webservice-related 
		XDoclet for this component-->
	<target name="xdoclet_ejb">
		<ant antfile="build/xdoclet-build.xml" target="ejbSet">
			<property name="source" value="${myComponent}" />
		</ant>
	</target>


	<!-- Can be used to only generate Spring-related XDoclet for this component-->
	<target name="xdoclet_spring">
		<ant antfile="build/xdoclet-build.xml" target="springSet">
			<property name="source" value="${myComponent}" />
		</ant>
		<ant antfile="build/xdoclet-build.xml"
			target="springSet-remote" />
	</target>

	<!-- Can be used to only generate JAXB-Objects for this component-->
	<target name="jaxb_build">
		<!-- generate common objects for all components -->
		<ant antfile="build/jaxb-build.xml" target="jaxb_class_generation">
			<property name="schema-dir" value="common/src/xsd/soap/common/0.3" />
			<property name="schema-file" value="common-types.xsd" />
			<property name="dependent-schema-files" value="common/src/xsd/common/0.3/xml.xsd" />
			<property name="binding-dir" value="${binding.info.dir}" />
			<property name="binding-file" value="common-types.xjb" />
			<property name="target" value="${dest.dir}" />
		</ant>
		
		<!-- generate statistic-data objects -->
		<ant antfile="build/jaxb-build.xml"
			target="jaxb_class_generation">
			<property name="schema-dir"
				value="sm/src/xsd/statistic-data/0.3" />
			<property name="schema-file"
				value="statistic-data.xsd" />
			<property name="dependent-schema-files"
				value="common/src/xsd/soap/common/0.3/common-types.xsd,common/src/xsd/common/0.3/xml.xsd" />
			<property name="binding-dir"
				value="${binding.info.dir}" />
			<property name="binding-file"
				value="statistic-data.xjb" />
			<property name="target" value="${dest.dir}" />
		</ant>
	</target>

	<target name="packaging-component">
		<taskdef resource="net/sf/antcontrib/antcontrib.properties">
			<classpath>
				<pathelement location="build/lib/ant-contrib-1.0b1.jar" />
			</classpath>
		</taskdef>

		<property file="current-project-setting.properties" />
		<echo>Current project setting: ${current-project-setting}</echo>
		<if>
			<equals arg1="${current-project-setting}"
				arg2="one-component" />
			<then>
				<echo>
					Building jar-file from
					deploy/escidoc-core.ear/${myComponent}.jar
				</echo>
				<jar basedir="deploy/escidoc-core.ear/${myComponent}.jar"
					destfile="dist/packages/${myComponent}.jar" />
			</then>
			<else>
				<echo>
					Building jar-file from
					escidoc-core.ear/${myComponent}.jar
				</echo>
				<jar basedir="escidoc-core.ear/${myComponent}.jar"
					destfile="dist/packages/${myComponent}.jar" />
			</else>
		</if>
	</target>
	<target name="compile">
			<ant antfile="build/java-build.xml" target="compile" dir="">
			<property name="destination"
				value="escidoc-core.ear/common.jar/" />
			<property name="component" value="common" />
		</ant>
	
	</target>

</project>
