<!--
  ~ CDDL HEADER START
  ~
  ~ The contents of this file are subject to the terms of the Common Development and Distribution License, Version 1.0
  ~ only (the "License"). You may not use this file except in compliance with the License.
  ~
  ~ You can obtain a copy of the license at license/ESCIDOC.LICENSE or http://www.escidoc.de/license. See the License
  ~ for the specific language governing permissions and limitations under the License.
  ~
  ~ When distributing Covered Code, include this CDDL HEADER in each file and include the License file at
  ~ license/ESCIDOC.LICENSE. If applicable, add the following below this CDDL HEADER, with the fields enclosed by
  ~ brackets "[]" replaced with your own identifying information: Portions Copyright [yyyy] [name of copyright owner]
  ~
  ~ CDDL HEADER END
  ~
  ~ Copyright 2006-2011 Fachinformationszentrum Karlsruhe Gesellschaft fuer wissenschaftlich-technische Information mbH
  ~ and Max-Planck-Gesellschaft zur Foerderung der Wissenschaft e.V. All rights reserved. Use is subject to license
  ~ terms.
  -->

<refentry xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:xi="http://www.w3.org/2001/XInclude"
          xmlns:src="http://nwalsh.com/xmlns/litprog/fragment"
          xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
          version="5.0" xml:id="variablelist.as.blocks">
<refmeta>
<refentrytitle>variablelist.as.blocks</refentrytitle>
<refmiscinfo class="other" otherclass="datatype">boolean</refmiscinfo>
</refmeta>
<refnamediv>
<refname>variablelist.as.blocks</refname>
<refpurpose>Format <tag>variablelist</tag>s lists as blocks?</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment xml:id="variablelist.as.blocks.frag">
<xsl:param name="variablelist.as.blocks" select="0"/>
</src:fragment>
</refsynopsisdiv>

<refsection><info><title>Description</title></info>

<para>If non-zero, <tag>variablelist</tag>s will be formatted as
blocks.</para>

<para>If you have long terms, proper list markup in the FO case may produce
unattractive lists. By setting this parameter, you can force the stylesheets
to produce block markup instead of proper lists.</para>

<para>You can override this setting with a processing instruction as the
child of <tag>variablelist</tag>: <tag class="xmlpi">dbfo
list-presentation="blocks"</tag> or <tag class="xmlpi">dbfo
list-presentation="list"</tag>.</para>

<para>When using <literal>list-presentation="list"</literal>,
you can also control the amount of space used for the <tag>term</tag>s with 
the <tag class="xmlpi">dbfo term-width=".25in"</tag> processing instruction,
the <tag class="attribute">termlength</tag> attribute on <tag>variablelist</tag>,
or allow the stylesheets to attempt to calculate the amount of space to leave based on the 
number of letters in the longest term.  
</para>

<programlisting>  &lt;variablelist&gt;
        &lt;?dbfo list-presentation="list"?&gt;
        &lt;?dbfo term-width="1.5in"?&gt;
        &lt;?dbhtml list-presentation="table"?&gt;
        &lt;?dbhtml term-width="1.5in"?&gt;
        &lt;varlistentry&gt;
          &lt;term&gt;list&lt;/term&gt;
          &lt;listitem&gt;
                &lt;para&gt;
                  Formatted as a list even if variablelist.as.blocks is set to 1.
                &lt;/para&gt;
          &lt;/listitem&gt;
        &lt;/varlistentry&gt;
  &lt;/variablelist&gt;</programlisting>


</refsection>

</refentry>
