<?xml version="1.0" encoding="UTF-8"?>
<project name="eSciDoc infrastructure - java build file" basedir=".." default="build">

	<!-- redundantly compiled classes in the ${escidoc-package-dir} will be 
    removed after compilation in target compile -->
	<property name="escidoc-package-dir" value="de/escidoc/core/" description="redundantly compiled classes in the ${escidoc-package-dir} 
		will be removed after compilation in target compile" />

	<property file="build/escidoc-build.properties" />
	<property file="build/escidoc-build.default.properties" />

	<path id="classpathWithoutCommon">
		<fileset dir="build/lib" includes="**/*.jar" />
		<fileset dir="lib" includes="**/*.jar" />
		<fileset dir="aa/src" includes="**/*.jar" />
		<fileset dir="escidoc-core.ear/axis.war/WEB-INF/lib" includes="**/*.jar" />
		<fileset dir="escidoc-core.ear/META-INF/lib" includes="**/*.jar" />

		<!-- include jars of components -->
		<fileset dir="common/src/META-INF" includes="lib/**/*.jar" />
		<fileset dir="aa/src/META-INF" includes="lib/**/*.jar" />
		<fileset dir="adm/src/META-INF" includes="lib/**/*.jar" />
		<fileset dir="cmm/src/META-INF" includes="lib/**/*.jar" />
		<fileset dir="om/src/META-INF" includes="lib/**/*.jar" />
		<fileset dir="oum/src/META-INF" includes="lib/**/*.jar" />
		<fileset dir="sb/src/META-INF" includes="lib/**/*.jar" />
		<fileset dir="sm/src/META-INF" includes="lib/**/*.jar" />
		<fileset dir="st/src/META-INF" includes="lib/**/*.jar" />
		<fileset dir="wm/src/META-INF" includes="lib/**/*.jar" />
	</path>

	<path id="classpath">
		<fileset dir="build/lib" includes="**/*.jar" />
		<fileset dir="lib" includes="**/*.jar" />
		<fileset dir="aa/src" includes="**/*.jar" />
		<fileset dir="escidoc-core.ear/axis.war/WEB-INF/lib" includes="**/*.jar" />
		<fileset dir="escidoc-core.ear/META-INF/lib" includes="**/*.jar" />

		<!-- include jars of components -->
		<fileset dir="common/src/META-INF" includes="lib/**/*.jar" />
		<fileset dir="aa/src/META-INF" includes="lib/**/*.jar" />
		<fileset dir="adm/src/META-INF" includes="lib/**/*.jar" />
		<fileset dir="cmm/src/META-INF" includes="lib/**/*.jar" />
		<fileset dir="om/src/META-INF" includes="lib/**/*.jar" />
		<fileset dir="oum/src/META-INF" includes="lib/**/*.jar" />
		<fileset dir="sb/src/META-INF" includes="lib/**/*.jar" />
		<fileset dir="sm/src/META-INF" includes="lib/**/*.jar" />
		<fileset dir="st/src/META-INF" includes="lib/**/*.jar" />
		<fileset dir="wm/src/META-INF" includes="lib/**/*.jar" />

		<!-- include escidoc-core.ear/common.jar/ into classpath to prevent 
        compilation of common classes during compilation of ${component}.jar
        classes -->
		<fileset dir="escidoc-core.ear/common.jar/" />

	</path>

	<path id="sources">
		<dirset dir=".">
			<include name="*/src/" />
			<include name="*/gen/" />
			<include name="*/test/" />
		</dirset>
	</path>

	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="build/lib/ant-contrib-1.0b1.jar" />
		</classpath>
	</taskdef>

	<!-- Cleans the output folders -->
	<target name="clean" description="Cleans the output folders: escidoc-core.ear/*jar/**, escidoc-core.ear/escidoc-core.war/xsd/rest/**, escidoc-core.ear/escidoc-core.war/xsd/soap/**, and bin/**">
		<echo> java-build.xml-clean: basedir=${basedir} </echo>
		<delete includeEmptyDirs="true" quiet="true">
			<fileset dir="escidoc-core.ear">
				<include name="*.jar/**" />
				<exclude name="*.jar" />
			</fileset>
			<fileset dir="escidoc-core.ear/escidoc-core.war/xsd">
				<include name="rest/**" />
				<exclude name="rest" />
				<include name="soap/**" />
				<exclude name="soap" />
			</fileset>
			<fileset dir="bin">
				<include name="**" />
			</fileset>
		</delete>
	</target>

	<!-- Cleans the output folders for component -->
	<target name="clean_component" description="Cleans the output folder for a specified component-jar: escidoc-core.ear/${component-jar}/**">
		<delete includeEmptyDirs="true">
			<fileset dir="escidoc-core.ear/${component}">
				<include name="*.jar/**" />
				<exclude name="*.jar" />
			</fileset>
		</delete>
	</target>

	<!-- Compiles all components -->
	<target name="compile-components" description="Compiles all components">
		<!-- first, common has to be compiled as this is used by all components -->
		<antcall target="compile-common" />
		<!-- second, all component, except common, have to be compiled. -->
		<for list="${components}" param="component">
			<sequential>
				<if>
					<not>
						<equals arg1="@{component}" arg2="common" />
					</not>
					<then>
						<antcall target="compile">
							<param name="destination" value="escidoc-core.ear/@{component}.jar/" />
							<param name="component" value="@{component}" />
						</antcall>
					</then>
				</if>
			</sequential>
		</for>
	</target>

	<!-- Compiles all sources and copies the necessary configuration files to output folder -->
	<target name="build" description="run me">
		<mkdir dir="escidoc-core.ear/axis.war/WEB-INF/lib" />
		<mkdir dir="escidoc-core.ear/META-INF/lib" />

		<echo> java-build.xml-build: basedir=${basedir} </echo>
		<antcall target="copy-non-java-files" />

		<!-- compile components -->
		<antcall target="compile-components" />

		<!-- AOP compile -->
		<ant antfile="build/helper-build.xml" target="aop-compile" dir="" />


	</target>

	<target name="copy-non-java-files" description="copy all non java files from src folders to output folder">

		<for list="${components}" param="component">
			<sequential>
				<echo level="info">Component: @{component}</echo>

				<!-- copy files from all componentname/src, componentname/gen, and 
				componentname/test folders to escidoc-core.ear/componentname.jar -->
				<copy todir="escidoc-core.ear">
					<fileset dir=".">
						<include name="@{component}/src/**/*.*" />
						<include name="@{component}/gen/**/*.*" />
						<include name="@{component}/test/**/*.*" />
						<exclude name="@{component}/**/*.java" />
						<exclude name="@{component}/**/package.html" />
						<exclude name="@{component}/src/**/merge/*.*" />
						<exclude name="@{component}/src/xsd/**" />
						<exclude name="@{component}/src/META-INF/lib/**" />
						<exclude name="@{component}/src/docbook/**" />
						<exclude name="@{component}/src/*.persistence-prefs.properties" />
					</fileset>
					<mapper type="regexp" from="(.*?)[/\\](src|gen|test)[/\\](.+)" to="\1.jar/\3" />
				</copy>

				<!-- copy libraries from component to escidoc-core.ear lib-directory-->
				<available file="@{component}/src/META-INF/lib" type="dir" property="@{component}.present" />

				<if>
					<equals arg1="${@{component}.present}" arg2="true" />
					<then>
						<copy todir="escidoc-core.ear/META-INF/lib/@{component}">
							<fileset dir="@{component}/src/META-INF/lib">
								<include name="**/*.*" />
							</fileset>
						</copy>
					</then>
				</if>

				<!-- TODO added failonerror="false" 
		        - remove this if all xsd directories are created -->
				<!-- copy schema files from all componentname/src/xsd folders to 
		        escidoc-core.ear/escidoc-core.war/xsd -->
				<!-- copy rest specific schemas to the rest folder, soap specific 
		        schemas to the soap folder -->
				<copy todir="escidoc-core.ear/escidoc-core.war/xsd" failonerror="false">
					<fileset dir=".">
						<include name="@{component}/src/xsd/rest/**/*.xsd" />
						<include name="@{component}/src/xsd/soap/**/*.xsd" />
					</fileset>
					<mapper type="regexp" from="(.*?)[/\\]xsd[/\\](.+)" to="\2" />
				</copy>
				<!-- copy schemas related to rest and soap interfaces to the rest 
		        folder -->
				<copy todir="escidoc-core.ear/escidoc-core.war/xsd/rest" failonerror="false">
					<fileset dir=".">
						<include name="@{component}/src/xsd/**/*.xsd" />
						<exclude name="@{component}/src/xsd/rest/**/*.xsd" />
						<exclude name="@{component}/src/xsd/soap/**/*.xsd" />
					</fileset>
					<mapper type="regexp" from="(.*?)[/\\]xsd[/\\](.+)" to="\2" />
				</copy>
				<!-- copy schemas related to rest and soap interfaces to the soap 
		        folder -->
				<copy todir="escidoc-core.ear/escidoc-core.war/xsd/soap" failonerror="false">
					<fileset dir=".">
						<include name="@{component}/src/xsd/**/*.xsd" />
						<exclude name="@{component}/src/xsd/rest/**/*.xsd" />
						<exclude name="@{component}/src/xsd/soap/**/*.xsd" />
					</fileset>
					<mapper type="regexp" from="(.*?)[/\\]xsd[/\\](.+)" to="\2" />
				</copy>
				<!-- copy unspecific schemas to unspecific folder -->
				<copy todir="escidoc-core.ear/escidoc-core.war/xsd" failonerror="false">
					<fileset dir=".">
						<include name="@{component}/src/xsd/**/*.xsd" />
						<exclude name="@{component}/src/xsd/rest/**/*.xsd" />
						<exclude name="@{component}/src/xsd/soap/**/*.xsd" />
					</fileset>
					<mapper type="regexp" from="(.*?)[/\\]xsd[/\\](.+)" to="\2" />
				</copy>
			</sequential>
		</for>

		<!-- fix schema locations -->
		<replaceregexp match="http://www.escidoc.org/schemas(/rest|/soap)?(.*?/(0\.[013456789][0-9]*|[1-9]+\.[0-9]+)/.*\.xsd)" replace="http://www.escidoc.org/schemas/rest\2" flags="g" encoding="UTF-8">
			<fileset dir="escidoc-core.ear/escidoc-core.war/xsd/rest" includes="**/*.xsd" excludes="**/search-result/**/*.*" />
		</replaceregexp>

		<!-- fix schema locations -->
		<replaceregexp match="http://www.escidoc.org/schemas(/rest|/soap)?(.*?/(0\.[013456789][0-9]*|[1-9]+\.[0-9]+)/.*\.xsd)" replace="http://www.escidoc.org/schemas/soap\2" flags="g" encoding="UTF-8">
			<fileset dir="escidoc-core.ear/escidoc-core.war/xsd/soap" includes="**/*.xsd" excludes="**/search-result/**/*.*" />
		</replaceregexp>

	</target>

	<!-- target to compile classes for common.jar -->
	<target name="compile-common">
		<!--<property name="build.compiler" 
		        value="org.eclipse.jdt.core.JDTCompilerAdapter"/>-->
		<mkdir dir="common/gen" />
		<mkdir dir="common/test" />

		<javac srcdir="common" destdir="escidoc-core.ear/common.jar" classpathref="classpathWithoutCommon" sourcepathref="sources" debug="on" depend="off">
			<src>
				<fileset dir="common/src">
					<include name="**/.java" />
				</fileset>
				<fileset dir="common/gen">
					<include name="**/.java" />
				</fileset>
				<fileset dir="common/test">
					<include name="**/.java" />
				</fileset>
			</src>
		</javac>

	</target>

	<!-- Generic compile command for src/gen/test folders of a component -->
	<target name="compile">
		<!--<property name="build.compiler" 
        value="org.eclipse.jdt.core.JDTCompilerAdapter"/>-->
		<!-- create directories if they don't exist. -->

		<mkdir dir="${component}/gen" />
		<!--
		 <mkdir dir="${component}/test" />
		 -->

		<javac srcdir="${component}" destdir="${destination}" classpathref="classpath" sourcepathref="sources" debug="on" depend="off">
			<src>
				<fileset dir="${component}/src">
					<include name="**/.java" />
				</fileset>
				<fileset dir="${component}/gen">
					<include name="**/.java" />
				</fileset>
				<!--
				<fileset dir="${component}/test">
					<include name="**/.java"/>
				</fileset>
		 -->
			</src>
		</javac>

	</target>

	<!-- Generic copy command for the configuration files -->
	<target name="copy">
		<copy todir="${destination}">
			<fileset dir="${component}/src">
				<include name="**/*.*" />
				<exclude name="**/*.java" />
				<exclude name="**/merge/*.*" />
				<exclude name="**/xsd/*.*" />
			</fileset>
			<fileset dir="${component}/gen">
				<include name="**/*.*" />
				<exclude name="**/*.java" />
			</fileset>
			<fileset dir="${component}/test">
				<include name="**/*.*" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<!-- TODO added failonerror="false" - remove this if all xsd directories are created -->
		<copy todir="escidoc-core.ear/escidoc-core.war/xsd" failonerror="false">
			<fileset dir="${component}/src/xsd">
				<include name="**/*.xsd" />
			</fileset>
		</copy>
	</target>

</project>
